service:
  name: notification

# Add the serverless-webpack plugin
plugins:
  - serverless-pseudo-parameters
  - serverless-webpack
  - serverless-offline
  - serverless-stage-manager

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage,'dev'}
  region: ${opt:region,'us-east-1'}
  apiKeys:
    - ${self:provider.stage}-atlas
    - ${self:provider.stage}-qa-testing
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sqs:SendMessage"
        - "sqs:GetQueueUrl"
      Resource: "arn:aws:sqs:${self:provider.region}:${self:provider.environment.ACCOUNT_ID}:${self:provider.environment.EMAIL_QUEUE_NAME}"
  environment:
    SENDGRID_API_KEY: ${self:custom.sendgridKey.${self:provider.stage}}
    ACCOUNT_ID: ${self:custom.accountId.${self:provider.stage}}
    REGION: ${self:provider.region}
    EMAIL_QUEUE_NAME: ${self:custom.emailQueueName.${self:provider.stage}}
    RESTRICT_ADDRESSES: ${self:custom.restrictAddresses.${self:provider.stage}}

custom:
  stages:
    - local
    - dev
  sendgridKey:
    local: ${file(./local.config.json):SENDGRID_API_KEY}
    dev: ${ssm:sendgridAPIKey} 
  accountId: 
    local: "785891586360"
    dev: "785891586360"
  emailQueueName:
    local: "NotificationEmailQueue-DEV"
    dev: "NotificationEmailQueue-DEV"
  restrictAddresses:
    local: true
    dev: true

functions:
  customEmail:
    handler: src/function-handlers/http/email/custom/handler.post
    events:
      - http:
          method: post
          path: /api/v1/email/custom
  sendEmail:
    handler: src/function-handlers/queue/send-email/handler.run
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - NotificationEmailQueue
              - Arn
          batchSize: 1
  openAPI:
    handler: src/function-handlers/http/docs/open-api/handler.get
    events:
      - http:
          method: get
          path: /api/v1/open-api.yml
  documentationUI:
    handler: src/function-handlers/http/docs/ui/handler.get
    events:
      - http:
          method: get
          path: /api/v1/documentation

resources:
  Resources:
    NotificationEmailQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: ${self:custom.emailQueueName.${self:provider.stage}}